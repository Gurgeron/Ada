Visualized Table
Overview
The table displays uploaded data in a structured, sortable format for exploration.

Functional Requirements
Display Data:
Show rows with columns for “Feature Request,” “Customer Type,” and “Priority.”
Sorting:
Allow sorting by column (e.g., Priority).
Expandable Architecture for Filters (Future):
Design the table to support filters (e.g., by customer segment).

UI Specifications
Table layout with alternating row colors (white and light gray).
Column headers styled with bold serif font.

Backend Integration
API Endpoint:
/fetch-data: Retrieve preprocessed data for display.

Data Format
Example Data for Table:
json
Copy code
[
  {
    "feature_request": "Add API integrations",
    "customer_type": "Enterprise",
    "priority": "High"
  },
  {
    "feature_request": "Improve UI responsiveness",
    "customer_type": "Small Business",
    "priority": "Medium"
  }
]



Development Notes
Use React Table or a similar library for modular, reusable table components.
Decouple table rendering from data preprocessing to ensure flexibility.

